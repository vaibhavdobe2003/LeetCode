Median of Two merged Sorted array

Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.
The overall run time complexity should be O(log (m+n)).

Example 1:

Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.
Example 2:
Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.
 
Constraints:
nums1.length == m
nums2.length == n
0 <= m <= 1000
0 <= n <= 1000
1 <= m + n <= 2000
-106 <= nums1[i], nums2[i] <= 106

ANSWER:

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int n = nums1.length;
        int m = nums2.length;
        int []nums3=new int[n+m];
        int i=0,j=0,k=0;
           while(i < n){   
         nums3[k++] = nums1[i++];   
        }    
        while(j < m){   
         nums3[k++] = nums2[j++];   
        }  
        Arrays.sort(nums3);
        if(nums3.length==1)
        {
            return nums3[0];
        }
        else {
        int qost;
        int mod=nums3.length%2;
        qost = nums3.length/2;
        if(mod==0){  
        double med;
        med=((double)nums3[qost]+(double)nums3[--qost])/2.0;
            return med;
        }
        else
            return nums3[qost];
        }        
    }
}
